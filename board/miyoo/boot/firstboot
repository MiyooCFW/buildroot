#!/bin/busybox sh

MOUNTDIR=/boot
# expect to be run from /boot, where the boot partition is mounted (readonly)

# create swap
mkswap /dev/mmcblk0p3 | tee -a ${LOG}
swapon /dev/mmcblk0p3 | tee -a ${LOG}

LOG=/dev/null

# high brightness
echo '10' > /sys/devices/platform/backlight/backlight/backlight/brightness

#echo -e "\e[?3c"
echo -e "\e[32m" # green

echo "firstboot script running..." | tee -a ${LOG}
echo

BASEDIR="${MOUNTDIR}"

# action time

# copy over the config files
echo "Copying default configuration files into place..." | tee -a ${LOG}
mount -t vfat -o rw,sync,utf8 /dev/mmcblk0p4 /mnt | tee -a ${LOG}
if test -r "${BASEDIR}/configs/manifest"; then
    cat "${BASEDIR}/configs/manifest" | while read -r LINE; do
        if test "${LINE}" == "${LINE#!}" -a "${LINE}" != "" ; then
            set -- ${LINE}
            # 1               2
            # source_filename target_filename/inside main/
            if test -r "${BASEDIR}/configs/$1"; then
                TO="$2"
                if test "${TO}" == ""; then
                    TO="$1"
                fi
                echo "Copying $1 to /mnt/$TO..." | tee -a ${LOG}
                cp -f "${BASEDIR}/configs/$1" "/mnt/$TO" | tee -a ${LOG}
            fi
        fi
    done
fi

echo

# run a custom script if present - could be used to fix u-boot and such
if test -r "${BASEDIR}/firstboot.custom.sh"; then
    echo "Running a specific firstboot script..." | tee -a ${LOG}
    (cd "${BASEDIR}" && sh firstboot.custom.sh) | tee -a ${LOG}
    echo "Finished running a specific firstboot script." | tee -a ${LOG}
fi


echo " "
sleep 1

# test if proper video\kbd driver was loaded:
if !(dialog --defaultno --stdout --timeout 10 --title 	"   Can you see this msg?" \
		--colors --yesno "\n\n   \ZuSelect an option & press START" 12  60); then
		sync
		sleep 2
		poweroff
fi
		
# resize the main partition if requested
if ((test -e "${MOUNTDIR}/resize") && !(dialog --defaultno --yes-label NO --no-label YES --stdout --timeout 10 --title 	"   Expand MAIN partition?" \
    --colors --yesno "\n\n   \ZuSelect an option & press START\Zn\n\n             \ZbWARNING:\Zn\n       After 10s auto-resize\n   of FAT32 partition will begin." 12  60)); then
    clear
    echo "Going to resize the MAIN partition." | tee -a ${LOG}
    echo "This can take A LONG TIME, so be patient." | tee -a ${LOG}
    umount /dev/mmcblk0p4 | tee -a ${LOG}
    fsck.fat -y /dev/mmcblk0p4 | tee -a ${LOG}
    fatresize -s max -v -p /dev/mmcblk0p4 -n 4
    fsck.fat -y /dev/mmcblk0p4 | tee -a ${LOG}
    echo -n -e \\xEB\\x58\\x90 > /dev/mmcblk0p4
    sync
    mount -t vfat -o rw,sync,utf8 /dev/mmcblk0p4 /mnt | tee -a ${LOG}
fi

# do some more stuff here ??


mount -o remount,rw "${MOUNTDIR}" | tee -a ${LOG}
# Create temp file to store variable for menu choice
TEMP=$(mktemp) 
# Display the menu for selecting CONSOLE_VARIANT using dialog
if (grep "DETECTED_VERSION=V90/Q90/Q20/PocketGo ST7789S controller" "${MOUNTDIR}/uEnv.txt"); then
 dialog --clear --title "Select your device:" --menu "Select an option:" 15 40 5 \
    1 "Powkiddy Q20" \
    2 "Powkiddy Q90" \
    3 "Powkiddy V90" \
    4 "PocketGO (default)" \
    5 "PocketGO with TE pin" \
    2> $TEMP

# Read the user's choice from the file
CHOICE=$(cat $TEMP)
# Perform actions based on the user's choice
case $CHOICE in
    0)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 BittBoy2x_v1" 5 18
        echo "CONSOLE_VARIANT=bittboy2x_v1" > ${MOUNTDIR}/console.cfg
        ;;
    0)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 BittBoy2x_v2" 5 18
        echo "CONSOLE_VARIANT=bittboy2x_v2" > ${MOUNTDIR}/console.cfg
        ;;
    0)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 BittBoy3.5" 5 18
         echo "CONSOLE_VARIANT=bittboy3.5" > ${MOUNTDIR}/console.cfg
        ;;
    1)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 Powkiddy Q20" 5 18
        echo "CONSOLE_VARIANT=q20" > ${MOUNTDIR}/console.cfg
        ;;
    2)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 Powkiddy Q90" 5 18
        echo "CONSOLE_VARIANT=q90" > ${MOUNTDIR}/console.cfg
        ;;
    3)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 Powkiddy V90" 5 18
        echo "CONSOLE_VARIANT=v90" > ${MOUNTDIR}/console.cfg
        ;;
    4)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 PocketGo" 5 18
        echo "CONSOLE_VARIANT=pocketgo" > ${MOUNTDIR}/console.cfg
        ;;
    5)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 PocketGoi+TE" 5 18
        echo "CONSOLE_VARIANT=pocketgo_TE" > ${MOUNTDIR}/console.cfg
        ;;
    0)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 XYC Q8" 5 18
        echo "You selected XYC Q8"
        echo "CONSOLE_VARIANT=xyc" > ${MOUNTDIR}/console.cfg
        ;;
    10)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 SUO M3 (R61520)" 5 18
        echo "CONSOLE_VARIANT=m3" > ${MOUNTDIR}/console.cfg
        ;;
    11)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 SUP M3 with RM68090" 5 24
        echo "CONSOLE_VARIANT=m3_rm68090" > ${MOUNTDIR}/console.cfg
        ;;
    12)
        dialog --colors --timeout 2 --ok-label " Your device " --msgbox "\Zb\Z1 SUP M3 with HX8347D" 5 18
        echo "CONSOLE_VARIANT=m3_hx8347d" > ${MOUNTDIR}/console.cfg
        ;;
    *)
        echo "Invalid choice. Exiting and selecting default device."
		sleep 2
        ;;
 esac

# Cleanup - delete the temporary file
 rm $TEMP
fi
# disable this script
echo "Disabling the firstboot script." | tee -a ${LOG}
mv "${MOUNTDIR}/firstboot" "${MOUNTDIR}/firstboot.done" | tee -a ${LOG}
if test -e "${MOUNTDIR}/resize"; then rm "${MOUNTDIR}/resize"; reboot; fi
mount -o remount,ro "${MOUNTDIR}" | tee -a ${LOG}

echo

sync
echo "firstboot script finished." | tee -a ${LOG}

echo

if test -r "${BASEDIR}/firstboot.custom.sh"; then
echo "please wait a few seconds for shutdown...." | tee -a ${LOG}
umount /dev/mmcblk0p4 | tee -a ${LOG}
#umount /dev/mmcblk0p1 | tee -a ${LOG} # this fails
sleep 3
fi
#REBOOT device to overwrite CONSOLE_VARIANT from $CHOICE
reboot
